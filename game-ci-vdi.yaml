#cloud-config
# - Required Extra Vars
# $INTERFACE
# $STATIC_IP_ADDRESS
# $GATEWAY_IP
# $DNS_SERVER_IP
# $EDITOR_VERSION
disable_root: false
network:
  config: disabled
users:
  - name: ${USERNAME}
    groups: users, admin, docker, sudo, kvm
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    lock_passwd: false
    passwd: ${PASSWORD}
    ssh_import_id:
      - gh:${GITHUB_USER}
  - name: ${VM_ADMIN}
    gecos: system acct
    groups: users, admin, docker, sudo
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    lock_passwd: false
    passwd: ${PASSWORD}
    ssh_authorized_keys:
      - ${VM_KEY}
bootcmd:
  - mkdir -p /opt/unityhub/chrome-sandbox
write_files:
- path: /usr/bin/unity-hub
  content: |
    #!/bin/bash
    xvfb-run -a /opt/unityhub/unityhub-bin --no-sandbox --headless "$@" 2>/dev/null
- path: /etc/systemd/system/desktop.service
  content: |
    [Unit]
    After=graphical.target systemd-user-sessions.service

    [Service]
    User=friend
    WorkingDirectory=~
    ExecStart=/usr/bin/startx
    Restart=always
    RestartSec=5

    [Install]
    WantedBy=graphical.target
- path: /etc/systemd/system/x11vnc.service
  content: |
    [Unit]
    Description=VNC Server for X11
    After=syslog.target network-online.target
    Wants=syslog.target network-online.target

    [Service]
    User=friend
    ExecStart=/usr/bin/x11vnc -display :0 -loop
    ExecStop=/usr/bin/x11vnc -R stop
    Restart=on-failure
    RestartSec=2

    [Install]
    WantedBy=multi-user.target
- path: /etc/modprobe.d/nouveau.conf
  content: |
    blacklist nouveau
- path: /home/${USERNAME}/.config/sunshine/sunshine.conf
  content: |
    origin_web_ui_allowed = wan
- path: /var/lib/cloud/scripts/per-boot/nvidia-installer.sh
  permissions: "0755"
  content: |
    #!/bin/bash
    ####################
    # Install the Nvidia driver
    /NVIDIA-Linux-x86_64-*/nvidia-installer --silent --install-compat32-libs --no-nouveau-check

    ####################
    # Create the xorg config
    sudo nvidia-xconfig

    #####################
    # enable system services
    sudo systemctl enable desktop
    sudo systemctl start desktop
    sudo systemctl enable x11vnc
    sudo systemctl start x11vnc

    ######################
    # Install Unity Editor
    sudo -u ${USERNAME} unity-hub install-path --set /opt/unity/editors
    sudo -u ${USERNAME} unity-hub install --version 2023.1.16
- path: /etc/machine-id
  content: |
    576562626572264761624c65526f7578
package_update: true
package_upgrade: true
packages:
  - ssh-import-id
  - sudo
  - curl
  - tmux
  - apt-transport-https
  - ca-certificates
  - software-properties-common
  - git-extras
  - rsyslog
  - fail2ban
  - htop
  - gpg
  - open-iscsi
  - nfs-common
  - kmod
  - pkg-config
  - make
  - libvulkan1
  - dbus
  - dbus-x11
  - xvfb
  - xorg
  - xinit
  - x11vnc
  # Desktop environemnt
  - xfce4
  - xfce4-goodies
  - tzdata
  - wget
  - gcc
  - firefox-esr
  - zenity
  - libgbm1
  - gnupg
  - desktop-file-utils
  # Additional software
  - blender
runcmd:
  ########################
  # Configure System Services
  # Desktop and x11vnc need to be stopped so that Nvidia drivers will install
  - sudo systemctl stop lightdm.service
  - sudo systemctl disable lightdm.service
  - sudo systemctl stop desktop.service
  - sudo systemctl disable desktop.service
  - sudo systemctl stop x11vnc.service
  - sudo systemctl disable x11vnc.service
  - sudo systemctl enable fail2ban
  - sudo systemctl start fail2ban
  #######################
  # Unity Hub
  - wget -qO - https://hub.unity3d.com/linux/keys/public | gpg --dearmor | tee /usr/share/keyrings/Unity_Technologies_ApS.gpg > /dev/null
  - sh -c 'echo "deb [signed-by=/usr/share/keyrings/Unity_Technologies_ApS.gpg] https://hub.unity3d.com/linux/repos/deb stable main" > /etc/apt/sources.list.d/unityhub.list'
  - apt-get update
  - apt-get install -y unityhub
  - mkdir -p /var/lib/dbus/
  - ln -sf /etc/machine-id /var/lib/dbus/machine-id
  - sed -i 's/^\(.*DISPLAY=:.*XAUTHORITY=.*\)\( "\$@" \)2>&1$/\1\2/' /usr/bin/xvfb-run
  - chmod +x /usr/bin/unity-hub
  - mkdir -p /opt/unity/editors
  - chown ${USERNAME}:${USERNAME} /opt/unity/editors
  #####################
  # Download kernel linux-headers, needed for GPU driver
  - sudo apt-get install -y linux-headers-amd64
  - sudo apt-get install -y linux-headers-`uname -r`
  #####################
  # Import SSH keys
  # ~ technically optional ~
  - sudo -u ${USERNAME} ssh-import-id-gh ${GITHUB_USER}
  ######################
  # Install YQ
  - wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq &&\
  - chmod +x /usr/bin/yq
  ######################
  # Install Docker
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  - sudo apt-get update
  - sudo apt-get install -y docker-ce
  ########################
  # Install Docker Compose
  - sudo -u ${USERNAME} -i mkdir -p /home/${USERNAME}/.docker/cli-plugins/
  - sudo -u ${USERNAME} -i curl -SL https://github.com/docker/compose/releases/download/v2.17.3/docker-compose-linux-x86_64 -o  /home/${USERNAME}/.docker/cli-plugins/docker-compose
  - sudo chmod +x /home/${USERNAME}/.docker/cli-plugins/docker-compose
  ########################
  # Brew and Python3
  - wget https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
  - chmod +x /install.sh
  - chmod 777 /install.sh
  - sudo -u ${USERNAME} NONINTERACTIVE=1 /bin/bash /install.sh
  - sudo -u ${USERNAME} /home/linuxbrew/.linuxbrew/bin/brew shellenv >> /home/${USERNAME}/.profile
  - sudo -u ${USERNAME} /home/linuxbrew/.linuxbrew/bin/brew install python@3.11
  - sudo -u ${USERNAME} /home/linuxbrew/.linuxbrew/opt/python@3.11/libexec/bin >> /home/${USERNAME}/.profile
  - sudo chown -R ${USERNAME}:${USERNAME} /home/linuxbrew
  - sudo chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}
  ########################
  # Fix for startx that allows starting an xsession as a non-console user
  - echo "allowed_users=anybody" >> /etc/X11/Xwrapper.config
  - echo "needs_root_rights=yes" >> /etc/X11/Xwrapper.config
  ########################
  # Download and extract the Nvidia driver. Dont install yet through
  # We need to reboot first for kernel and modprobe options to be initialized
  - wget -q -O NVIDIA-Linux-x86_64.run https://us.download.nvidia.com/XFree86/Linux-x86_64/525.125.06/NVIDIA-Linux-x86_64-525.125.06.run
  - bash NVIDIA-Linux-x86_64.run -x
  - reboot
